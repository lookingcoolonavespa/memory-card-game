{"version":3,"sources":["components/ScoreField.js","components/Scoreboard.js","components/Tooltip.js","components/Header.js","components/GameOver.js","components/Card.js","components/Loading.js","logic/cardLogic.js","App.js","index.js"],"names":["ScoreField","props","className","label","score","Scoreboard","currentScore","highScore","Tooltip","close","tooltipRef","useRef","useState","pxToShift","setPxToShift","useEffect","current","width","offsetWidth","window","addEventListener","removeEventListener","ref","style","top","left","onClick","e","stopPropagation","Header","isGameOver","isHelp","setIsHelp","type","prev","GameOver","startNewGame","Card","imgSrc","name","useSpring","transform","shuffle","shuffleAnimate","start","to","from","div","card","target","closest","dataset","pokemon","src","alt","Loading","Pokedex","require","usedCards","Pdex","loadImage","obj","Promise","resolve","reject","img","Image","onload","onerror","App","level","setLevel","isLoading","setIsLoading","cardCount","setCardCount","cards","setCards","cardsClicked","setCardsClicked","setHighScore","setCurrentScore","setIsGameOver","listOfPromises","i","id","getRandomID","getPokemonByName","push","all","Math","floor","random","includes","getRdmPokemon","then","pokemons","listOfCards","forEach","str","charAt","toUpperCase","slice","sprites","other","front_default","map","cardCtnRef","gameCtnRef","handleCardClick","length","arr","shuffled","rdmIndex","resizeCtn","rows","getComputedStyle","getPropertyValue","split","filter","val","console","log","gridTemplateRows","Fragment","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5880459.chunk.js","sourcesContent":["import React from 'react';\n\nconst ScoreField = (props) => (\n  <div className=\"score-field\">\n    <p className=\"score-label\">{props.label}</p>\n    <p className=\"score-num\">{props.score}</p>\n  </div>\n);\n\nexport default ScoreField;\n","import React from 'react';\n\nimport ScoreField from './ScoreField.js';\n\nconst Scoreboard = (props) => (\n  <div className=\"scoreboard\">\n    <ScoreField label=\"Score\" score={props.currentScore} />\n    <ScoreField label=\"Best\" score={props.highScore} />\n  </div>\n);\n\nexport default Scoreboard;\n","import React, { useRef, useEffect, useState } from 'react';\n\nimport './styles/TooltipStyles.css';\n\nconst Tooltip = ({ close }) => {\n  const tooltipRef = useRef(null);\n\n  const [pxToShift, setPxToShift] = useState('-26.7px');\n\n  useEffect(function positionTooltip() {\n    if (!tooltipRef.current) return;\n\n    const width = tooltipRef.current.offsetWidth;\n    const trianglePos = 15; // in %, the value of 'left' styling of tooltip:before aka the little triangle thing\n    const btnRadius = 15; // in px,\n\n    setPxToShift(`-${(width * trianglePos) / 100 - btnRadius}px`);\n  }, []);\n\n  useEffect(function closeTooltipEvent() {\n    window.addEventListener('click', close);\n\n    return () => window.removeEventListener('click', close);\n  }, []);\n\n  return (\n    <div\n      className=\"tooltip\"\n      ref={tooltipRef}\n      style={{\n        top: '43px',\n        left: pxToShift,\n      }}\n      onClick={(e) => e.stopPropagation()}\n    >\n      Don't click on the same card twice!\n    </div>\n  );\n};\n\nexport default Tooltip;\n","import React, { useState } from 'react';\n\nimport Scoreboard from './Scoreboard.js';\nimport Tooltip from './Tooltip.js';\n\nimport './styles/HeaderStyles.css';\n\nconst Header = ({ currentScore, highScore, isGameOver }) => {\n  const [isHelp, setIsHelp] = useState(false);\n\n  if (isGameOver) return <div className=\"header\"></div>;\n  return (\n    <div className=\"header\">\n      <div className=\"tooltip-ctn\">\n        <button\n          type=\"button\"\n          className=\"tooltip-btn\"\n          onClick={() => setIsHelp((prev) => !prev)}\n        >\n          ?\n        </button>\n        {isHelp && <Tooltip close={() => setIsHelp(false)} />}\n      </div>\n      <Scoreboard currentScore={currentScore} highScore={highScore} />\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport Scoreboard from './Scoreboard.js';\n\nimport './styles/GameOverStyles.css';\n\nconst GameOver = (props) => (\n  <div className=\"game-over\">\n    <Scoreboard currentScore={props.currentScore} highScore={props.highScore} />\n    <button type=\"button\" onClick={props.startNewGame}>\n      Try Again?\n    </button>\n  </div>\n);\n\nexport default GameOver;\n","import React, { useEffect } from 'react';\nimport { useSpring, animated } from 'react-spring';\n\nimport './styles/CardStyles.css';\n\nconst Card = ({ imgSrc, name, onClick }) => {\n  const [shuffle, shuffleAnimate] = useSpring(() => ({\n    transform: 'rotateY(0)',\n  }));\n\n  useEffect(() =>\n    shuffleAnimate.start({\n      to: { transform: 'rotateY(0)' },\n      from: { transform: 'rotateY(270deg)' },\n    })\n  );\n\n  return (\n    <animated.div\n      style={shuffle}\n      className=\"card\"\n      onClick={(e) => {\n        const card = e.target.closest('.card');\n        onClick(card.dataset.pokemon);\n      }}\n      data-pokemon={name}\n    >\n      <div className=\"card-front\">\n        <img src={imgSrc} alt={name}></img>\n        <p>{name}</p>\n      </div>\n      <div className=\"card-back\">\n        <img\n          src=\"https://logos-world.net/wp-content/uploads/2020/05/Pokemon-Logo.png\"\n          alt=\"pokemon logo\"\n        />\n      </div>\n    </animated.div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport './styles/LoadingStyles.css';\n\nconst Loading = () => (\n  <div className=\"loading\">\n    <div className=\"lds-ellipsis\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  </div>\n);\n\nexport default Loading;\n","const Pokedex = require('pokeapi-js-wrapper');\n\nconst minCards = 4;\nconst maxCards = 12;\n\nlet usedCards = [];\n\nconst Pdex = new Pokedex.Pokedex();\n\nfunction getRdmPokemon(cardCount) {\n  let listOfPromises = [];\n\n  for (let i = 0; i < cardCount; i++) {\n    const id = getRandomID();\n    const pokemon = Pdex.getPokemonByName(id);\n    listOfPromises.push(pokemon);\n    usedCards.push(id);\n  }\n\n  return Promise.all(listOfPromises);\n\n  // helper functions\n  function getRandomID() {\n    const min = 1;\n    const max = 898;\n\n    let id = Math.floor(Math.random() * (max - min)) + min;\n    while (usedCards.includes(id)) {\n      id = Math.floor(Math.random() * (max - min)) + min;\n    }\n\n    return id;\n  }\n}\n\nfunction shuffle(arr) {\n  let shuffled = [];\n  for (let i = 0; i < arr.length; i++) {\n    let rdmIndex = Math.floor(Math.random() * arr.length);\n    while (shuffled.includes(arr[rdmIndex]))\n      rdmIndex = Math.floor(Math.random() * arr.length);\n\n    shuffled.push(arr[rdmIndex]);\n  }\n  return shuffled;\n}\n\nfunction loadImage(obj) {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.onload = () => resolve(img);\n    img.onerror = reject;\n    img.src = obj.src;\n    img.alt = obj.name;\n  });\n}\n\nfunction capitalizeFirstLetter(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nfunction emptyUsedCards() {\n  usedCards = [];\n\n  console.log(usedCards);\n}\n\nexport {\n  getRdmPokemon,\n  maxCards,\n  minCards,\n  emptyUsedCards,\n  shuffle,\n  loadImage,\n  capitalizeFirstLetter,\n};\n","import React, { useEffect, useState, useRef } from 'react';\n\nimport Header from './components/Header.js';\nimport GameOver from './components/GameOver.js';\nimport Card from './components/Card.js';\nimport Loading from './components/Loading.js';\n\nimport {\n  getRdmPokemon,\n  loadImage,\n  maxCards,\n  shuffle,\n  capitalizeFirstLetter,\n  emptyUsedCards,\n  minCards,\n} from './logic/cardLogic.js';\n\nimport './globalStyles.css';\n\nconst App = () => {\n  const [level, setLevel] = useState(1);\n\n  const [isLoading, setIsLoading] = useState(true);\n\n  const [cardCount, setCardCount] = useState(minCards);\n  const [cards, setCards] = useState([]);\n  const [cardsClicked, setCardsClicked] = useState([]);\n\n  const [highScore, setHighScore] = useState(0);\n  const [currentScore, setCurrentScore] = useState(0);\n\n  const [isGameOver, setIsGameOver] = useState(false);\n\n  useEffect(function initLevel() {\n    if (isLoading)\n      getRdmPokemon(cardCount)\n        .then(function pullInfo(pokemons) {\n          let listOfCards = [];\n\n          pokemons.forEach((pokemon) => {\n            listOfCards.push({\n              name: capitalizeFirstLetter(pokemon.name),\n              src: pokemon.sprites.other['official-artwork'].front_default,\n            });\n          });\n\n          return Promise.all(listOfCards.map(loadImage));\n        })\n        .then((listOfCards) => {\n          setIsLoading(false);\n          setCards(listOfCards);\n        });\n  });\n\n  const cardCtnRef = useRef();\n  const gameCtnRef = useRef();\n  useEffect(function sizeCtnBasedOnNumOfRows() {\n    if (!cardCtnRef.current) return;\n    resizeCtn();\n\n    window.addEventListener('resize', resizeCtn);\n\n    function resizeCtn() {\n      let rows = window\n        .getComputedStyle(cardCtnRef.current)\n        .getPropertyValue('grid-template-rows')\n        .split(' ');\n\n      if (rows.includes('0px')) rows = rows.filter((val) => val !== '0px');\n\n      console.log(rows);\n\n      if (rows.length === 1)\n        return (gameCtnRef.current.style.gridTemplateRows = '0.5fr 1fr');\n      if (rows.length === 2)\n        return (gameCtnRef.current.style.gridTemplateRows = '0.35fr 1fr');\n      if (rows.length === 3)\n        return (gameCtnRef.current.style.gridTemplateRows = '0.2fr 1fr');\n    }\n  });\n\n  /////////////////////\n  /* Event Listeners */\n  /////////////////////\n\n  function handleCardClick(name) {\n    if (cardsClicked.includes(name)) return setIsGameOver(true);\n\n    setCardsClicked([...cardsClicked, name]);\n    if (currentScore + 1 > highScore) setHighScore(currentScore + 1);\n    setCurrentScore(currentScore + 1);\n\n    if (cardsClicked.length + 1 === cardCount) {\n      // check if level is finished\n      setLevel(level + 1);\n      setCardsClicked([]);\n      const num = cardCount + 2 <= maxCards ? cardCount + 2 : maxCards;\n      setCardCount(num);\n      setIsLoading(true);\n      return;\n    }\n\n    setCards(shuffle(cards));\n  }\n\n  function startNewGame() {\n    setLevel(1);\n    setCardCount(minCards);\n    setCardsClicked([]);\n    setCurrentScore(0);\n    emptyUsedCards();\n\n    setIsGameOver(false);\n    setIsLoading(true);\n  }\n\n  return (\n    <React.Fragment>\n      <Header\n        highScore={highScore}\n        currentScore={currentScore}\n        isGameOver={isGameOver}\n      />\n      <main>\n        {isGameOver && (\n          <GameOver\n            highScore={highScore}\n            currentScore={currentScore}\n            startNewGame={startNewGame}\n          />\n        )}\n        {isLoading && <Loading />}\n        {!isLoading && !isGameOver && (\n          <div ref={gameCtnRef} className=\"game-ctn\">\n            <div className=\"level-text\">Level {level}</div>\n            <div ref={cardCtnRef} className=\"card-ctn\">\n              {cards.map((card) => (\n                <Card\n                  key={card.alt}\n                  imgSrc={card.src}\n                  name={card.alt}\n                  onClick={handleCardClick}\n                />\n              ))}\n            </div>\n          </div>\n        )}\n      </main>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}